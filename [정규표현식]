[정규식]
\d - 숫자와 매치, [0-9]와 동일하다
\D - 숫자가 아닌 것과 매치, [^0-9]와 동일하다
\s - whitespace문자와 매치, [ \t\n\r\f\v]와 동일하다. 
\S - whitespace 문자가 아닌 것과 매치, [^ \t\n\r\f\v]와 동일하다.
\w - 문자,숫자와 매치, [a-zA-Z0-9_]와 동일하다.
\W - 문자,숫자가 아닌것과 매치, [^a-zA-Z0-9_]와 동일하다.

Dot(.) 문자는 줄바꿈 문자인 \n을 제외한 모든 문자와 매치됨을 의미한다.


[자주 사용하는 정규식 메소드]

[python]
re(regular expression)모듈: 파이썬에서 지원하는 기본 라이브러리 모듈
re.compile의 결과로 돌려주는 객체 p

정규식 문자열 검색 메소드 
1. findall(정규식, 문자열(st)): 정규식과 매칭되는 모든 문자열을 담은 리스트로 반환
ex) 
st = "aa3bc7d"
list1 = re.findall(st)
list2 = re.findall(st)
print(list1) # ["aa","bc","d"]
print(list2) # ["a","a","b","c","d"]


정규식 문자열 치환 메소드
2. sub(정규식, 변경하고 싶은 문자, 문자열(st))
해당 문자열(st)에서 모든 소문자 없애기
ex) st = "0a1b2c3d4e5f6g7h8i9"
result = st.sub("[a-z]","",st)  
print(result) # "0123456789"


[Java]
정규식 문자열 치환 메소드
replaceAll(정규식, 치환 할 문자열)
ex) st = "0a1b2c3d4e5f6g7h8i9"
result = st.replceAll("[a-z]","")  
print(result) # "0123456789"
